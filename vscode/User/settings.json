// 既定の設定を上書きするには、このファイル内に設定を挿入します
{
  // 垂直ルーラーを表示する列
  "editor.rulers": [80],

  // ステージされた変更がない場合はすべての変更をコミットします。
  "git.enableSmartCommit": true,

  // エディターで空白文字を表示する方法を制御します。'none'、'boundary' および 'all' が使用可能です。'boundary' オプションでは、単語間の単一スペースは表示されません。
  "editor.renderWhitespace": "all",

  // 1 つのタブに相当するスペースの数。`editor.detectIndentation` がオンの場合、この設定はファイル コンテンツに基づいて上書きされます。
  "editor.tabSize": 2,

  // エディターで入力後に自動的に行の書式設定を行うかどうかを制御します
  // https://devadjust.exblog.jp/23791887/
  "editor.formatOnType": false,

  // eslintによる監視が実行される拡張子
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "vue"
  ],

  // [php] 言語に対して上書きされるエディター設定を構成します。
  "[php]": {
    "editor.tabSize": 4
  },

  // [python] 言語に対して上書きされるエディター設定を構成します。
  "[python]": {
    "editor.tabSize": 4
  },

  "workbench.startupEditor": "newUntitledFile",
  "window.zoomLevel": 0,

  "diffEditor.ignoreTrimWhitespace": true,

  // If true, will use single instead of double quotes
  "prettier.singleQuote": true,

  // Controls the printing of trailing commas wherever possible.
  //  Valid options:
  //     'none' - No trailing commas
  //     'es5' - Trailing commas where valid in ES5 (objects, arrays, etc)
  //     'all' - Trailing commas wherever possible (function arguments)
  "prettier.trailingComma": "all",

  // Use 'prettier-eslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from eslint rules.
  "prettier.eslintIntegration": true,

  "files.associations": {
    ".envrc": "dotenv",
    "Dangerfile": "ruby"
  },
  "typescript.updateImportsOnFileMove.enabled": "always",
  "terminal.integrated.rendererType": "dom",
  "window.restoreWindows": "all",
  "window.newWindowDimensions": "inherit",
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "editor.minimap.enabled": false,
  "editor.renderControlCharacters": true,
  "breadcrumbs.enabled": true,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,

  "gitlens.currentLine.enabled": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.codeLens.authors.enabled": false,
  "markdown.extension.toc.updateOnSave": false,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.fontFamily": "'Ricty Diminished', Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 13,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "workbench.iconTheme": "vscode-icons",
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "vetur.format.defaultFormatter.html": "prettier",
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "vsicons.dontShowNewVersionMessage": true,

  "vetur.experimental.templateInterpolationService": true,
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "javascript.preferences.importModuleSpecifier": "non-relative"
}